export type Json = string | number | boolean | null | { [key: string]: Json | undefined } | Json[];

export interface Database {
  public: {
    Tables: {
      profiles: {
        Row: {
          id: string;
          username: string | null;
          full_name: string | null;
          avatar_url: string | null;
          bio: string | null;
          mental_health_badges: string[] | null;
          current_mood: string | null;
          looking_for: string | null;
          mental_health_journey: string | null;
          gender: string | null;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id: string;
          username?: string | null;
          full_name?: string | null;
          avatar_url?: string | null;
          bio?: string | null;
          mental_health_badges?: string[] | null;
          current_mood?: string | null;
          looking_for?: string | null;
          mental_health_journey?: string | null;
          gender?: string | null;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          username?: string | null;
          full_name?: string | null;
          avatar_url?: string | null;
          bio?: string | null;
          mental_health_badges?: string[] | null;
          current_mood?: string | null;
          looking_for?: string | null;
          mental_health_journey?: string | null;
          gender?: string | null;
          created_at?: string;
          updated_at?: string;
        };
      };
      conversations: {
        Row: {
          id: string;
          created_at: string;
        };
        Insert: {
          id?: string;
          created_at?: string;
        };
        Update: {
          id?: string;
          created_at?: string;
        };
      };
      conversation_participants: {
        Row: {
          conversation_id: string;
          profile_id: string;
        };
        Insert: {
          conversation_id: string;
          profile_id: string;
        };
        Update: {
          conversation_id?: string;
          profile_id?: string;
        };
      };
      messages: {
        Row: {
          id: string;
          conversation_id: string;
          profile_id: string;
          content: string;
          created_at: string;
          is_read: boolean;
        };
        Insert: {
          id?: string;
          conversation_id: string;
          profile_id: string;
          content: string;
          created_at?: string;
          is_read?: boolean;
        };
        Update: {
          id?: string;
          conversation_id?: string;
          profile_id?: string;
          content?: string;
          created_at?: string;
          is_read?: boolean;
        };
      };
      user_preferences: {
        Row: {
          profile_id: string;
          age_min: number | null;
          age_max: number | null;
          connection_type: string | null;
          preferred_badges: string[] | null;
          preferred_genders: string[] | null;
          location: string | null;
          max_distance: number | null;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          profile_id: string;
          age_min?: number | null;
          age_max?: number | null;
          connection_type?: string | null;
          preferred_badges?: string[] | null;
          preferred_genders?: string[] | null;
          location?: string | null;
          max_distance?: number | null;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          profile_id?: string;
          age_min?: number | null;
          age_max?: number | null;
          connection_type?: string | null;
          preferred_badges?: string[] | null;
          preferred_genders?: string[] | null;
          location?: string | null;
          max_distance?: number | null;
          created_at?: string;
          updated_at?: string;
        };
      };
       matches: {
        Row: {
          id: string
          profile_id_1: string
          profile_id_2: string
          match_score: number
          status: string
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          profile_id_1: string
          profile_id_2: string
          match_score: number
          status?: string
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          profile_id_1?: string
          profile_id_2?: string
          match_score?: number
          status?: string
          created_at?: string
          updated_at?: string
        }
      }
    };
    Views: {
      [_ in never]: never;
    };
    Functions: {
      [_ in never]: never;
    };
    Enums: {
      [_ in never]: never;
    };
  };
}
